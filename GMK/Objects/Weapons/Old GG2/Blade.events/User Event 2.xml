<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="OTHER" id="12">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    if(readyToShoot and bladesOut&lt;maxBlades)
    {
        replenishing = 0;
        playsound(x,y,global.BladeSnd);
        var shot;
        randomize();
        shot = instance_create(x+lengthdir_x(5, owner.aimDirection), y+lengthdir_y(5, owner.aimDirection), BladeB);
        shot.direction = owner.aimDirection;
        shot.speed = 12;
        shot.owner = owner;
        shot.ownerPlayer = ownerPlayer;
        shot.team = owner.team;
        if(ammoCount &gt; highAmmoThreshold)
            shot.hitDamage = bladeDamage;
        else if(ammoCount &lt; lowAmmoThreshold)
            shot.hitDamage = depletedBladeDamage;
        else
            shot.hitDamage = (ammoCount-lowAmmoThreshold)/(highAmmoThreshold-lowAmmoThreshold)*(bladeDamage-depletedBladeDamage)+depletedBladeDamage;
        alarm[0] = refireTime;
        shot.alarm[0] = bladeLife;
        alarm[5] = bladeLife; //this isn't for when the blade actually dies, but the longest it could live
        bladesOut += 1;
        shot.weapon = WEAPON_BLADE;
        with(shot)
            hspeed += owner.hspeed;
        justShot = true;
        readyToShoot = false;
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
