<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/*
var i, map, n1, t1, w1, n2, t2, in, str, color,yoffset;

if (global.kothHudPos)
    yoffset = 65*global.killLogPos;
else
    yoffset = 45*global.killLogPos;

draw_set_halign(fa_left);
draw_set_valign(fa_center);

for (i = 0; i &lt; ds_list_size(kills); i += 1) {
    map = ds_list_find_value(kills, i);
    n1 = ds_map_find_value(map, "name1"); // Name of the Player who killed
    t1 = ds_map_find_value(map, "team1"); // Their team
    w1 = ds_map_find_value(map, "weapon"); // Their weapon sprite
    n2 = ds_map_find_value(map, "name2"); // Name of the Player who died
    t2 = ds_map_find_value(map, "team2"); // Their team
    in = ds_map_find_value(map, "inthis"); // Am I involved in this event?
    str = ds_map_find_value(map, "string"); // Special text: Finish off, bid farewell, domination, revenge
    
    draw_set_alpha(1);
    if (in)
       color = make_color_rgb(217,217,183);
    else color = make_color_rgb(49,45,26);

    draw_rectangle_color(view_xview[0] + view_wview[0] - string_width(n1 + n2 + str) - 12 - sprite_get_width(w1), view_yview[0] + i * 20 + 14 + yoffset,
        view_xview[0] + view_wview[0] - 8, view_yview[0] + i * 20 + 24 + 8 + yoffset, color, color, color, color, 0);
    draw_rectangle_color(view_xview[0] + view_wview[0] - string_width(n1 + n2 + str) - 14 - sprite_get_width(w1), view_yview[0] + i * 20 + 16 + yoffset,
        view_xview[0] + view_wview[0] - 6, view_yview[0] + i * 20 + 24 + 6+ yoffset, color, color, color, color, 0);
    
    if (t1 == TEAM_RED) {
        draw_set_color(make_color_rgb(171, 78, 70));
    } else if (t1 == TEAM_BLUE) {
        draw_set_color(make_color_rgb(100, 116, 132));
    } else {
        draw_set_color(c_white);
    }
    draw_text(view_xview[0] + view_wview[0] - string_width(n1 + n2 + str) - 12 - sprite_get_width(w1), view_yview[0] + i * 20 + 24 + yoffset, n1);
    draw_set_halign(fa_left);
    if (w1 != -1) {
        draw_sprite(w1, in, floor(view_xview[0] + view_wview[0] - string_width(n2 + str) - 10 - sprite_get_width(w1)/2 /*- sprite_get_xoffset(w1)*//*), floor(view_yview[0] + i * 20 + 24 + yoffset));
    }
    
    if (in)
        draw_set_color(c_black);
    else draw_set_color(c_white);
    draw_text(view_xview[0] + view_wview[0] - string_width(n2 + str) - 8, view_yview[0] + i * 20 + 24+ yoffset, str);
    draw_set_halign(fa_left);
    
    if (t2 == TEAM_RED) {
        draw_set_color(make_color_rgb(171, 78, 70));
    } else if (t2 == TEAM_BLUE){
        draw_set_color(make_color_rgb(100, 116, 132));
    } else {
        draw_set_color(c_white);
    }
    draw_text(view_xview[0] + view_wview[0] - string_width(n2) - 8, view_yview[0] + i * 20 + 24 + yoffset, n2);
}
*/
</argument>
      </arguments>
    </action>
    <action id="601" library="1">
      <!--action name: Execute_Script-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_execute_script</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="SCRIPT">drawKillLog</argument>
        <argument kind="EXPRESSION">0</argument>
        <argument kind="EXPRESSION">0</argument>
        <argument kind="EXPRESSION">0</argument>
        <argument kind="EXPRESSION">0</argument>
        <argument kind="EXPRESSION">0</argument>
      </arguments>
    </action>
  </actions>
</event>
