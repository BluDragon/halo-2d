<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    var xoffset, yoffset, xsize, ysize, i, player, redteam, blueteam, spec;
    
    xoffset = view_xview[0]+view_wview[0]/6-15;
    yoffset = view_yview[0]+view_hview[0]/10+50;
    xsize = view_wview[0]/5*3;
    ysize = view_hview[0]/5*3;
    
    draw_sprite_ext(Scoreboard, 0, xoffset, yoffset, 1, 1, 0, c_white, alpha*0.8);    

    draw_set_alpha(alpha);
    draw_set_color(c_white);
    draw_set_valign(fa_top);
    draw_set_halign(fa_center);
        
    redteam = ds_priority_create();
    blueteam = ds_priority_create();  
    spec = ds_priority_create();
    
    for(i=0; i&lt;ds_list_size(global.players); i+=1) {
        player = ds_list_find_value(global.players, i);
        if(player.team == TEAM_RED) {
            ds_priority_add(redteam, player, player.stats[POINTS]);
        } else if (player.team == TEAM_BLUE) {
            ds_priority_add(blueteam, player, player.stats[POINTS]);
        }
        else if (player.team == TEAM_SPECTATOR)
        {
            ds_priority_add(spec, player, 0);
        }
    }
    
    draw_set_color(make_color_rgb(227,226,225));
    draw_set_halign(fa_right);
    draw_text_transformed(view_xview[0]+239,view_yview[0]+130,ds_priority_size(redteam),1.3,1.3,0);
    draw_text_transformed(view_xview[0]+483,view_yview[0]+130,ds_priority_size(blueteam),1.3,1.3,0);
    
    if instance_exists(ScorePanel){
        draw_text_transformed(view_xview[0]+384,view_yview[0]+110,global.redCaps,3.5,3.5,0);
        draw_set_halign(fa_left);
        draw_text_transformed(view_xview[0]+412,view_yview[0]+110,global.blueCaps,3.5,3.5,0);
    }
    else if instance_exists(ArenaHUD){
        draw_text_transformed(view_xview[0]+384,view_yview[0]+110,ArenaHUD.redWins,3.5,3.5,0);
        draw_set_halign(fa_left);
        draw_text_transformed(view_xview[0]+412,view_yview[0]+110,ArenaHUD.blueWins,3.5,3.5,0);
    }
    
    draw_set_color(c_red);   
    for(i=0; ds_priority_size(redteam) &gt; 0; i+=1) {
        player = ds_priority_delete_max(redteam);
        
        if i&lt;12{
            if (showadmin &amp;&amp; player != global.myself) {
                var _x, _y;
                _x = xoffset+6;
                _y = yoffset+70+20*(i+1);
                draw_sprite_ext(Boot,0,_x,_y,1,1,0,c_white,alpha)
                if (mouse_x &gt;= _x and mouse_x &lt; _x+16
                    and mouse_y &gt;= _y and mouse_y &lt; _y+16)
                {
                    draw_sprite_ext(Boot,0,_x,_y,1,1,0,c_red,alpha*0.5)
                    if (mouse_check_button_pressed(mb_left)) {
                        mouse_clear(mb_left);
                        player.kicked = true;
                    }        
                }
            } else {
                if (global.myself.team == player.team or global.mapchanging) {
                    draw_sprite_ext(Icon,player.class,xoffset+14,yoffset+70+20*(i+1),1,1,0,c_white,alpha)
                    draw_sprite_ext(Icon,player.class,xoffset+14,yoffset+70+20*(i+1),1,1,0,c_red,alpha*0.2)
                }
            }
        
            draw_set_halign(fa_left);
            draw_text(xoffset-4, yoffset+70+20*(i+1),"    "+player.name);
        
            draw_set_halign(fa_right);
            draw_text(xoffset+xsize/2-15, yoffset+70+20*(i+1), string(floor(player.stats[POINTS])));
            
            if(player.object==-1) draw_sprite_ext(DeadS,0,xoffset+195,yoffset+75+20*(i+1),1,1,0,c_white,alpha);    
            
        }          
    }
    
    draw_set_color(c_blue);
    for(i=0; ds_priority_size(blueteam) &gt; 0; i+=1) {
        player = ds_priority_delete_max(blueteam);

        if i&lt;12{
            if (showadmin &amp;&amp; player != global.myself) {
                var _x, _y;
                _x = xoffset+xsize/2+44;
                _y = yoffset+70+20*(i+1);
                draw_sprite_ext(Boot,0,_x,_y,1,1,0,c_white,alpha)
                if (mouse_x &gt;= _x and mouse_x &lt; _x+16
                    and mouse_y &gt;= _y and mouse_y &lt; _y+16)
                {
                    draw_sprite_ext(Boot,0,_x,_y,1,1,0,c_red,alpha*0.5)
                    if (mouse_check_button_pressed(mb_left)) {
                        mouse_clear(mb_left);
                        player.kicked = true;
                    }        
                }
            } else {
                if(global.myself.team == player.team) {
                    draw_sprite_ext(Icon,player.class,xoffset+xsize/2+49,yoffset+70+20*(i+1),1,1,0,c_white,alpha)
                    draw_sprite_ext(Icon,player.class,xoffset+xsize/2+49,yoffset+70+20*(i+1),1,1,0,c_blue,alpha*0.2)
                }
            }
       
            draw_set_halign(fa_left);
            draw_text(xoffset+xsize/2+32, yoffset+70+20*(i+1),"    "+player.name);
        
            draw_set_halign(fa_right);
            draw_text(xoffset+xsize+25, yoffset+70+20*(i+1), string(floor(player.stats[POINTS])));
            
            if (player.object==-1) draw_sprite_ext(DeadS,0,xoffset+472,yoffset+75+20*(i+1),1,1,0,c_white,alpha);    
        
        }
    }
    
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    
    // Spectator printing code 
    
    draw_text(xoffset+xsize-475, yoffset+370,(string(ds_priority_size(spec))) + " spectator(s): ");    
    
    specList="";
    
    var __x, __y, __x_max, __str, __bootlen;
    
    __y = yoffset+370;
    __x_min = xoffset+xsize-350;
    __x_max = xoffset+xsize + 50;
    __x = __x_min;
    __bootlen = 0;
    for(i=0; ds_priority_size(spec) &gt; 0; i+=1) {
        player = ds_priority_delete_max(spec);            
        
        if (ds_priority_size(spec) == 0)
        {
            __str = player.name;
        }
        else
        {
            __str = player.name + ", ";
        }
        
        if (showadmin &amp;&amp; player != global.myself) {
            var _x, _y;
            _x = __x;
            _y = __y;
            __bootlen = 16;
            draw_sprite_ext(Boot,0,_x,_y,1,1,0,c_white,alpha)
            if (mouse_x &gt;= _x and mouse_x &lt; _x+16
                and mouse_y &gt;= _y and mouse_y &lt; _y+16)
            {
                draw_sprite_ext(Boot,0,_x,_y,1,1,0,c_red,alpha*0.5)
                if (mouse_check_button_pressed(mb_left)) {
                    mouse_clear(mb_left);
                    player.kicked = true;
                }        
            }
        }
        
        if (__bootlen + __x + string_width(__str) &gt; __x_max) {
            __x = __x_min;
            __y += string_height(__str) + 2;
        }
        draw_text(__bootlen + __x, __y, __str);
        __x += __bootlen + string_width(__str);
    }
    
    draw_text(xoffset + 8, yoffset+48, "Server: " + string_copy(global.joinedServerName,1,25));
    draw_text(xoffset+xsize/2+16, yoffset+48, "    Map: " + string_copy(global.currentMap,1,25));
    
    ds_priority_destroy(redteam);
    ds_priority_destroy(blueteam);
    ds_priority_destroy(spec);
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
