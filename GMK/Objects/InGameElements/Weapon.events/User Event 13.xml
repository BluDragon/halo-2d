<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="OTHER" id="23">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    receiveCompleteMessage(global.serverSocket, 8, global.deserializeBuffer);
    ammoCount = read_ushort(global.deserializeBuffer);
    reserveAmmo = read_ushort(global.deserializeBuffer);
    readyToShoot = read_ubyte(global.deserializeBuffer);
    alarm[0] = read_ubyte(global.deserializeBuffer);
    alarm[4] = read_ubyte(global.deserializeBuffer);    // reload timer
    alarm[8] = read_ubyte(global.deserializeBuffer);    // melee timer
    
    // function-specific data (i.e. charging, overheating)
    if (chargesUp) {
        // weapon charges up
        receiveCompleteMessage(global.serverSocket, 1, global.deserializeBuffer);
        chargeLevel = read_ubyte(global.deserializeBuffer);
    }
    if (overheats) {
        // weapon overheats
        receiveCompleteMessage(global.serverSocket, 2, global.deserializeBuffer);
        heat = read_ubyte(global.deserializeBuffer);
        overheated = read_ubyte(global.deserializeBuffer);
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
