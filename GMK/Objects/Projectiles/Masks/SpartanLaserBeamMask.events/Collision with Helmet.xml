<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="COLLISION" with="Helmet">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    var xIntersect, yIntersect;
    
    // make sure the collision is not with the owner or ally
    if (other.owner != owner) &amp;&amp; (!onSameTeam(ownerPlayer, other.ownerPlayer)) {
        // if the victim has already been hit, then exit
        if (ds_list_find_index(victimsHit, other.owner) != -1) exit;
        
        // add the victim to the list
        ds_list_add(victimsHit, other.owner);

        // spawn the beam explosion collision mask in the proper location
        // spawn the beam explosion collision mask in the approximate proper location
        findLineIntersection(x, y, -image_angle, other.owner.x, other.owner.y, -image_angle + 90);
        xIntersect = getLineIntersectX();
        yIntersect = getLineIntersectY();
                
        var blastMask;
        
        blastMask = instance_create(xIntersect, yIntersect, SpartanLaserBlastMask);
        blastMask.damage = damage;
        blastMask.shieldDamage = shieldDamage;
        blastMask.damageBleeds = damageBleeds;
        blastMask.owner = owner;
        blastMask.ownerPlayer = ownerPlayer;
        blastMask.team = team;
        blastMask.weaponType = WEAPON_SPARTANLASER;
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
